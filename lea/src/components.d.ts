/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface ZapSideDrawer {
    'changeStick': () => Promise<void>;
    'open': boolean;
    'openDrawer': () => Promise<void>;
    'pullText': string;
    'stickDirection': 'left' | 'right';
    'title': string;
  }
  interface ZapSpinner {}
  interface ZapStockFinder {}
  interface ZapStockList {
    'stockX': object[];
  }
  interface ZapStockPrice {
    'stockSymbolProp': string;
  }
  interface ZapTooltip {
    'displayTooltip': boolean;
    'tooltipText': string;
  }
}

declare global {


  interface HTMLZapSideDrawerElement extends Components.ZapSideDrawer, HTMLStencilElement {}
  var HTMLZapSideDrawerElement: {
    prototype: HTMLZapSideDrawerElement;
    new (): HTMLZapSideDrawerElement;
  };

  interface HTMLZapSpinnerElement extends Components.ZapSpinner, HTMLStencilElement {}
  var HTMLZapSpinnerElement: {
    prototype: HTMLZapSpinnerElement;
    new (): HTMLZapSpinnerElement;
  };

  interface HTMLZapStockFinderElement extends Components.ZapStockFinder, HTMLStencilElement {}
  var HTMLZapStockFinderElement: {
    prototype: HTMLZapStockFinderElement;
    new (): HTMLZapStockFinderElement;
  };

  interface HTMLZapStockListElement extends Components.ZapStockList, HTMLStencilElement {}
  var HTMLZapStockListElement: {
    prototype: HTMLZapStockListElement;
    new (): HTMLZapStockListElement;
  };

  interface HTMLZapStockPriceElement extends Components.ZapStockPrice, HTMLStencilElement {}
  var HTMLZapStockPriceElement: {
    prototype: HTMLZapStockPriceElement;
    new (): HTMLZapStockPriceElement;
  };

  interface HTMLZapTooltipElement extends Components.ZapTooltip, HTMLStencilElement {}
  var HTMLZapTooltipElement: {
    prototype: HTMLZapTooltipElement;
    new (): HTMLZapTooltipElement;
  };
  interface HTMLElementTagNameMap {
    'zap-side-drawer': HTMLZapSideDrawerElement;
    'zap-spinner': HTMLZapSpinnerElement;
    'zap-stock-finder': HTMLZapStockFinderElement;
    'zap-stock-list': HTMLZapStockListElement;
    'zap-stock-price': HTMLZapStockPriceElement;
    'zap-tooltip': HTMLZapTooltipElement;
  }
}

declare namespace LocalJSX {
  interface ZapSideDrawer {
    'open'?: boolean;
    'pullText'?: string;
    'stickDirection'?: 'left' | 'right';
    'title'?: string;
  }
  interface ZapSpinner {}
  interface ZapStockFinder {}
  interface ZapStockList {
    'onZapStockSymbol'?: (event: CustomEvent<string>) => void;
    'stockX'?: object[];
  }
  interface ZapStockPrice {
    'stockSymbolProp'?: string;
  }
  interface ZapTooltip {
    'displayTooltip'?: boolean;
    'tooltipText'?: string;
  }

  interface IntrinsicElements {
    'zap-side-drawer': ZapSideDrawer;
    'zap-spinner': ZapSpinner;
    'zap-stock-finder': ZapStockFinder;
    'zap-stock-list': ZapStockList;
    'zap-stock-price': ZapStockPrice;
    'zap-tooltip': ZapTooltip;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'zap-side-drawer': LocalJSX.ZapSideDrawer & JSXBase.HTMLAttributes<HTMLZapSideDrawerElement>;
      'zap-spinner': LocalJSX.ZapSpinner & JSXBase.HTMLAttributes<HTMLZapSpinnerElement>;
      'zap-stock-finder': LocalJSX.ZapStockFinder & JSXBase.HTMLAttributes<HTMLZapStockFinderElement>;
      'zap-stock-list': LocalJSX.ZapStockList & JSXBase.HTMLAttributes<HTMLZapStockListElement>;
      'zap-stock-price': LocalJSX.ZapStockPrice & JSXBase.HTMLAttributes<HTMLZapStockPriceElement>;
      'zap-tooltip': LocalJSX.ZapTooltip & JSXBase.HTMLAttributes<HTMLZapTooltipElement>;
    }
  }
}


